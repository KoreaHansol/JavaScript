//자바스크립트의 데이터 타입은 크게 두가지로 나뉜다.
//기본형 - 숫자, 문자, 불리언, null, undifined, ES6에서 심볼 추가
//참조형 - 객체, 배열, 함수, 날짜, 정규표현식, ES6에서 Map, WeakMap, Set, WeakSet
//기본형은 값이 담긴 주솟값을 바로 복제하고, 참조형은 값이 담긴 주솟값들로 이루어진 묶음을 가리키는 주솟값을 복제한다는 점이 다름

//var a; - 변할수 있는 데이터를 만든다. 이 데이터의 식별자는 a로 한다. 변수는 결국 변경가능한 데이터가 담길수 있는 공간 또는 그릇

//var a = 'abc' 문자열 'abc' 데이터는 별도의 공간에 저장되고 그 문자열을 가리키는 주솟값이 변수 a에는 저장된다
//만약 문자열'abc' 가 'abcd'로 바뀐다면 'abcd'라는 문자열을 새로 만들어서 별도의 공간에 저장하고 그 주소를 변수공간에 연결한다.
//var a = 'abc', var b = 'abc' 여기서 a와 b는 같은 문자열을 가리키는 주소값이 저장된다.(만약 이렇게 하지 않으면 변수가 500개일때는 500개의 새로운 문자열을 생성해야한다.)
//결론은 중복된 데이터에 대한 처리 효율이 높아진다.

//변수와 상수를 구분하는 성질은 변경 가능성이다. 바꿀 수 있으면 변수, 바꿀 수 없으면 상수
//불변값과 상수는 다른 개념인데 변수와 상수를 구분짓는 변경 가능성의 대상은 변수 영역메모리, 한번 데이터 할당이 이뤄진 변수 공간에 다른 데이터를 재할당할 수 있는지 여부가 관건
//반면 불변성 여부를 구분할 때의 변경 가능성의 대상은 데이터 영역 메모리.

//불변성
var a = 'abc';
a = a + 'def'; //데이터공간에서 'abcdef' 를 찾고 없으므로 새로운 문자열을 만들어 그 주소를 변수 a에 저장
var b = 5;
var c = 5; //데이터 공간에서 5를 찾고 이미 만들어 놓은 값이 있으니 그 주소를 재활용 (중복데이터 처리 효율 up)




//참조형 데이터의 할당

var obj1 = {
    a: 1,
    b: 'bbb'
};

//변수 영역의 빈 공간을 확보하고, 그 주소의 이름을 obj1로 지정, 값은 @5001
//임의의 데이터 저장 공간(@5001)에 데이터를 저장하려고 보니 여러개의 프로퍼티로 이뤄진 데이터 그룹.
// 이 그룹 내부에 프로퍼티를 저장하기 위해서 별도의 변수 영역을 마련하고 그 영역의 주소를 (@7103~?) @5001에 저장
//@7103및 @7104에 각각 a와 b라는 프로퍼티 이름을 지정.
//데이터 영역에서 숫자 1을 검색해보니 검색 결과가 없음 그래서 임의로 @5003에 저장하고 이 주소를 프로퍼티를 저장하기 위해 별도로 마련한 변수 영역인 @7103에 저장
//문자열 'bbb'역시 임의로 @5004에 저장하고(데이터영역), 이 주소를 @7104에 저장 (변수영역)

//결론적으로 기본형데이터와의 차이는 객체의 변수(프로퍼티) 영역이 별도로 존재한다는 점임.
//객체가 별도로 할애한 영역은 변수 영역일 뿐이다 (프로퍼티를 위해). 그리고 데이터 영역은 결국 기존의 메모리 공간을 그대로 활용하고 있다.
//데이터 영역에 저장된 값은 모두 불변값이다. 그러나 변수에는 다른값을 얼마든지 대입할 수 있다(데이터영역에 새로 할당하고 이값을 대입하는것)
//그래서 참조형 데이터는 불변하지 않다!하고 말하는것.



//참조형 데이터의 프로퍼티 재할당
